server:
  port: 80

spring:
  zipkin:
    base-url: http://${basic-zipkin.host:localhost}:${localhost.port:9411} #设置 Zipkin 服务的地址
  #    base-url: http://localhost:9411
  sleuth:
    sampler:
      percentage: 1.0 # 100%的概率将链路上的数据上传给Zipkin Server, 在默认情况下，该值为 0.1 ，开发调试期间设置为收集全部跟踪信息

eureka:
  instance:
    non-secure-port: ${server.port:80} #3 非SSL端口，若环境变量中server.port有值，则使用环境变量值，没有则使用8080
    metadata-map:
      insta: ${spring.application.name}:${random.value} #4 配置在Eureka Server的实例ID
  client:
    service-url:
      defaultZone: http://${eureka.host:localhost}:${eureka.port:8761}/eureka/ #5 Eureka客户端设置Eureka Server的地址

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 20000 #断路器超时时间

ribbon:
  ReadTimeout: 20000
  ConnectTimeout: 20000

zuul:
  host:
    connect-timeout-millis: 20000
    socket-timeout-millis: 20000

# Zuul.routes.basic-user 是自己定义的，需要指定他的path 和 serviceId,两者配合使用，就会将指定类型的请求URL路由到指定的ServiceId.
# Zuul 结合 Ribbon 会做负载均衡，将请求均匀分布到不同的服务实例。
  routes:
    basic-user:
      path: /basic-user/**
      serviceId: basic-user
      sensitiveHeaders:
    basic-zuul:
      path: /basic-zuul/**
      serviceId: basic-zipkin

# 如果不需要用 Ribbon 做负载均衡，可以指定服务实例的 Url , 用 zuul.routes.basic-user.url 配置指定，这时就不需要配置
# zuul.routes.basic-user.serviceId 了，一旦指定了 Url, Zuul 就不能做负载均衡了，而是直接访问指定的 Url。
#  routes:
#    basic-user:
#      path: /basic-user/**
#      url: localhost:8762
#      sensitiveHeaders:


# 如果你想指定 Url, 并且想做负载均衡，那么就需要自己维护负载均衡的服务注册列表。首先，将 ribbon.eureka.enabled 改为false
# Riboon 负载均衡不向 Eureka Client 获取服务注册列表信息。然后需要自己维护一份注册表，该注册表的服务名可自定义 basic-user-v1
# 通过 basic-user-v1.ribbon.listOfServers 来配置多个负载均衡的 Url
#  routes:
#    basic-user:
#      path: /basic-user/**
#      serviceId: basic-user
#      sensitiveHeaders:
#ribbon:
#  eureka:
#    enabled: false
#basic-user-v1:
#  ribbon:
#    listOfServers: http://localhost:8762,http://localhost:8763

#给每一个服务的 API 接口加前缀
#zuul:
#  prefix: v1

